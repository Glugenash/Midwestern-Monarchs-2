on_actions = {
	
	on_startup = {

		effect = {

			# Game Rules - Fragmentation
			if = {
				limit = {
					has_game_rule = {
						rule = medwole_fragmentation_status
						option = GREATER_MEDWOLE
					}
				}
				every_country = {
					limit = { is_subject_of = MDW }
					every_owned_state = {
						add_core_of = MDW
					}
					MDW = {
						annex_country = {
							target = PREV
							transfer_troops = yes
						}
					}
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = medwole_fragmentation_status
						option = MEDWOLE_ALONE
					}
				}
				every_country = {
					limit = { is_subject_of = MDW }
					MDW = {
						set_autonomy = {
							target = PREV
							autonomous_state = autonomy_free
						}
					}
				}
				every_state = {
					limit = { is_core_of = MDW is_owned_by = MDW }
					add_claim_by = LHT
				}
				every_state = {
					limit = { is_core_of = LHT }
					add_claim_by = MDW
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = medwole_fragmentation_status
						option = MEDWOLE_FRAGMENTED
					}
				}
				MDW = {
					release = MNN
					release = GSF
				}
				create_dynamic_country = {
					original_tag = IND
					set_country_flag = IND_MDW
					set_capital = { state = 84 }
					save_event_target_as = medwoles_carmel
					set_cosmetic_tag = IND_sparta
					every_state = {
						limit = { is_core_of = IND is_owned_by = MDW }
						event_target:medwoles_carmel  = {
							transfer_state = PREV 
						}
					}
					d_create_army = yes
				}
				MNN = {
					d_create_army = yes
				}
				GSF = {
					d_create_army = yes
				}
				every_state = {
					limit = {
						OR = {
							is_core_of = MNN is_core_of = GSF
						}
					}
					add_claim_by = MDW
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = medwole_fragmentation_status
						option = MEDWOLE_FRAGMENTED_MORE
					}
				}
				MDW = {
					release = MNN
					release = GSF
					set_autonomy = {
						target = GNB
						autonomous_state = autonomy_free
					}
					set_autonomy = {
						target = LHT
						autonomous_state = autonomy_free
					}
					set_autonomy = {
						target = BOR
						autonomous_state = autonomy_free
					}
					set_autonomy = {
						target = MIC
						autonomous_state = autonomy_free
					}
				}
				every_state = {
					limit = { is_core_of = MDW is_owned_by = MDW }
					add_claim_by = LHT
				}
				every_state = {
					limit = { is_core_of = LHT }
					add_claim_by = MDW
				}
				create_dynamic_country = {
					original_tag = IND
					set_country_flag = IND_MDW
					set_capital = { state = 84 }
					save_event_target_as = medwoles_carmel
					set_cosmetic_tag = IND_sparta
					every_state = {
						limit = { is_core_of = IND is_fully_controlled_by = MDW }
						event_target:medwoles_carmel  = {
							transfer_state = PREV 
						}
					}
					d_create_army = yes
				}
				MNN = {
					d_create_army = yes
				}
				GSF = {
					d_create_army = yes
				}
				every_state = {
					limit = {
						OR = {
							is_core_of = MNN is_core_of = GSF
						}
					}
					add_claim_by = MDW
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = ulm_fragmentation_status
						option = ULM_FRAGMENTED
					}
				}
				ULM = {
					release = MNP
					release = STK
					release = WBH
				}
				WBH = {
					d_create_army = yes
				}
				MNP = {
					d_create_army = yes
				}
				STK = {
					d_create_army = yes
				}
				every_state = {
					limit = { is_owned_by = ULM is_core_of = GNB }
					GNB = {
						transfer_state = PREV
					}
				}
				every_state = {
					limit = {
						OR = {
							is_core_of = WBH is_core_of = MNP is_core_of = STK
						}
					}
					add_claim_by = ULM
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = ulm_fragmentation_status
						option = GREATER_ULM
					}
				}
				ULM = {
					annex_country = {
						target = DLT
					}
					annex_country = {
						target = FRG
					}
				}
				every_state = {
					limit = { OR = { is_core_of = DLT is_core_of = FRG } }
					add_core_of = ULM
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = haubstadt_fragmentation_status
						option = HAUBSTADT_FRAGMENTED
					}
				}
				AHO = {
					remove_ideas = AHO_officer_inexperience
					release = SLM
					release = HAN
					release = MRV
					set_autonomy = {
						target = IND
						autonomous_state = autonomy_free
					}
					remove_state_core = 75
				}
				CNT = {
					transfer_state = 75
				}
				SLM = {
					d_create_army = yes
				}
				MRV = {
					d_create_army = yes
				}
				HAN = {
					d_create_army = yes
				}
				every_state = {
					limit = {
						OR = {
							is_core_of = HAN is_core_of = MRV is_core_of = SLM state = 75
						}
					}
					add_claim_by = AHO
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = haubstadt_fragmentation_status
						option = HAUBSTADT_CARMEL_FRAGMENTED
					}
				}
				AHO = {
					remove_ideas = AHO_officer_inexperience
					release = SLM
					release = HAN
					release = MRV
					set_autonomy = {
						target = IND
						autonomous_state = autonomy_free
					}
					remove_state_core = 75
				}
				CNT = {
					transfer_state = 75
				}
				IND = {
					release = DNV
				}
				SLM = {
					d_create_army = yes
				}
				MRV = {
					d_create_army = yes
				}
				DNV = {
					d_create_army = yes
				}
				HAN = {
					d_create_army = yes
				}
				every_state = {
					limit = {
						OR = {
							is_core_of = HAN is_core_of = MRV is_core_of = SLM state = 75
						}
					}
					add_claim_by = AHO
				}
				every_state = {
					limit = {
						is_core_of = DNV
					}
					add_claim_by = IND
				}
			}

			if = {
				limit = {
					OR = {
						has_game_rule = {
							rule = major_minor_fragmentation_status
							option = LIVONIA_FRAGMENTED
						}
						has_game_rule = {
							rule = major_minor_fragmentation_status
							option = AKRON_LIVONIA_FRAGMENTED
						}
					}
				}
				DTN = {
					release = JOE
				}
				JOE = {
					d_create_army = yes
				}
				every_state = {
					limit = {
						is_core_of = JOE
					}
					add_claim_by = DTN
				}
			}

			if = {
				limit = {
					OR = {
						has_game_rule = {
							rule = major_minor_fragmentation_status
							option = AKRON_FRAGMENTED
						}
						has_game_rule = {
							rule = major_minor_fragmentation_status
							option = AKRON_LIVONIA_FRAGMENTED
						}
					}
				}
				CNT = {
					release = QUI
				}
				QUI = {
					d_create_army = yes
				}
				every_state = {
					limit = {
						is_core_of = QUI
					}
					add_claim_by = CNT
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = battle_royale_status
						option = BATTLE_ROYALE_ENABLED
					}
				}
				every_country = {
					add_ai_strategy = {
						type = force_build_armies
						value = 300
					}
				}
				every_country = {
					limit = { is_subject = yes }
					OVERLORD = {
						set_autonomy = {
							target = PREV
							autonomous_state = autonomy_free
						}
					}
				}
				random_country = {
					limit = { is_ai = no }
					country_event = { id = war_events.7 hours = 24 }
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = major_minor_fragmentation_status
						option = MINOR_SPHERES
					}
				}
				MDW = {
					puppet = FRG
					puppet = CAV
					puppet = DLT
					puppet = TRN
					puppet = DAV
					puppet = CNT
				}
				ULM = {
					puppet = PSG
					puppet = CAR
					puppet = MIS
					puppet = MON
				}
				AHO = {
					puppet = ALC
					puppet = DTN
					puppet = FST 
					puppet = LPL
				}
			}

		}

	}

	on_monthly = {
		effect = {
			if = {
				limit = {
					has_game_rule = {
						rule = battle_royale_status
						option = BATTLE_ROYALE_ENABLED
					}
					has_war = no
					NOT = {
						has_country_flag = battle_royale_timer
					}
				}
				country_event = { id = war_events.9 hours = 24 random = 24 }
			}
		}
	}

	on_puppet = {
		effect = {
			if = {
				limit = {
					has_game_rule = {
						rule = battle_royale_status
						option = BATTLE_ROYALE_ENABLED
					}
				}
				FROM = {
					annex_country = {
						target = ROOT
					}
				}
			}
		}
	}

	on_peaceconference_ended = {
		effect = {
			if = {
				limit = { is_faction_leader = yes }
				dismantle_faction = yes
			}
		}
	}

}